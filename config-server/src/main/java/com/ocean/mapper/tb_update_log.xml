<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ocean.mapper.UpdateLogMapper">

    <resultMap id="result" type="com.ocean.domain.UpdateLog">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="update_obj_id" property="updateObjId" jdbcType="INTEGER"/>
        <result column="old_value" property="oldValue" jdbcType="VARCHAR"/>
        <result column="new_value" property="newValue" jdbcType="VARCHAR"/>
        <result column="update_desc" property="updateDesc" jdbcType="VARCHAR"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="baseSelectSql">
        id, username, update_obj_id, old_value, new_value, update_desc, gmt_create
    </sql>

    <!--查询更新记录-->
    <select id="queryUpdateLogList" resultMap="result">
        SELECT
        <include refid="baseSelectSql"/>
        FROM tb_update_log
        <where>
            <if test="username != null">
                and username = #{username, jdbcType=VARCHAR}
            </if>
            <if test="updateObjId != null">
                and update_obj_id = #{updateObjId, jdbcType=INTEGER}
            </if>
            <if test="oldValue != null">
                and old_value = #{oldValue, jdbcType=VARCHAR}
            </if>
            <if test="newValue != null">
                and new_value = #{newValue, jdbcType=VARCHAR}
            </if>
            <if test="updateDesc != null">
                and update_desc = #{updateDesc, jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <!--保存更新记录-->
    <insert id="saveUpdateLog" parameterType="com.ocean.domain.Config">
        INSERT INTO tb_update_log (username, update_obj_id, old_value, new_value, update_desc, gmt_create)
        VALUES (#{username, jdbcType=VARCHAR}, #{updateObjId, jdbcType=INTEGER}, #{oldValue, jdbcType=VARCHAR},
                #{newValue, jdbcType=VARCHAR}, #{updateDesc, jdbcType=VARCHAR}, now())
    </insert>

</mapper>